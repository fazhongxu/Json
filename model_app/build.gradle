apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION as String
    //compileSdkVersion rootProject.ext.compileSdkVersion
    //buildToolsVersion rootProject.ext.buildToolsVersion

    //签名文件隐藏（实际上只是不再build.gradle配置明文密码，别名等信息，把配置信息转移到了keystore.properties文件里面而已）签名信息配置方式
    //keystore.properties不是签名文件 知识一个普通的文件，里面有keyAlias，keyPassword，storePassword和storeFile=D:\\xxx.jks签名文件路径
    //上传到git不要上传签名文件和 keystore.properties 文件 避免签名文件泄漏
    def keystorePropertiesFile = rootProject.file("keystore.properties")
    def keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

   /* repositories {
        mavenCentral()
    }*/
    addRepos(repositories)


    signingConfigs {
        release {
            //配置这里是为了让三方的sdk不打包的情况下直接运行的时候可以使用，keystore会去三方比较注册的appid等
            /*keyAlias 'json'
            keyPassword '123456'
            storeFile file('../keystore.jks')
            storePassword '123456*/

            keyAlias keystoreProperties["keyAlias"]
            keyPassword keystoreProperties["keyPassword"]
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties["storePassword"]
        }
        debug {
            /*keyAlias 'json'
            keyPassword '123456'
            storeFile file('../keystore.jks')
            storePassword '123456'*/

            keyAlias keystoreProperties["keyAlias"]
            keyPassword keystoreProperties["keyPassword"]
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties["storePassword"]
        }
    }
    defaultConfig {
        applicationId "xxl.com.json"
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion TARGET_SDK_VERSION
        //minSdkVersion rootProject.ext.minSdkVersion
        //targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters "armeabi", "arm64-v8a"
        }
       /* javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }*/

    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }




}

//ARouter kotlin 方式配置
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}


greendao {

    schemaVersion 1//数据库版本号 每次升级数据库都需要改变版本，只能增加

    daoPackage 'xxl.com.json.gen'//设置DaoMaster、DaoSession、Dao包名

    targetGenDir 'src/main/java'//设置DaoMaster、DaoSession、Dao目录
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //api 'com.android.support:appcompat-v7:25.3.1'
    api deps.support.appcompat
    api deps.support.constraint
    testImplementation 'junit:junit:4.12'
    api project(':model_base')
    api project(':model_frame')
    api project(':model_share')
    api deps.support.recyclerview
    api deps.support.design
    api deps.support.multidex
    //Gson
    api deps.gson.gson
    //Glide
    api deps.glide.glide
    //EventBus
    api deps.eventBus.eventBus
    //RxJava
    api deps.rxjava.rxjava
    api deps.rxjava.rxandroid
    //Retrofit
    api deps.retrofit.retrofit
    api deps.retrofit.converterGson
    //greenDao
    api deps.greenDao.greenDao
    //导航
    api deps.amap.amap
    //搜索
    api deps.amap.search
    //定位
    api deps.amap.location
    //josup
    api deps.jsoup.jsoup
    //kotlin
    api deps.kotlin
    //bugly
    api deps.bugly
    api deps.arouter.arouterApi
    kapt deps.arouter.arouterCompiler
    implementation project(':model_base')
    implementation project(':model_web')
    implementation project(':mediator_web')
}

