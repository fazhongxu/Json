if (isLibrary.toBoolean()) { // 模块化基本配置 作为libray 给别的模块使用时
    apply plugin: 'com.android.library'
} else {    //不作为库给别的模块调用（独立运行时）
    apply plugin: 'com.android.application'
}
android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        // library 作为独立apk 运行时，避免安装多个apk 把 application 设置和主app 一样
        if(!isLibrary.toBoolean()) {
            applicationId "xxl.com.json"
        }
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    sourceSets {
        main {
            if (isLibrary.toBoolean()) {   // 这个module 作为一个libary 库提供给别的模块使用时 不需要 Main程序入口
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
                //集成开发模式下排除debug文件夹中的所有Java文件
                java {
                    exclude 'debug/**'
                }
            } else {    //否则需要程序入口
                manifest.srcFile 'src/main/AndroidManifest.xml'
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api deps.support.appcompat
    api deps.support.constraint
    testImplementation 'junit:junit:4.12'
}
